#!/bin/sh -e

case "$1" in
start)
	echo "Loading coprocessors modules..."
	if [ -f /lib/modules/@KERNELVERSION@/kernel/drivers/dsp/cmemk.ko ] ; then
	    PHYS_START=@CMEM_START@
	    if [ -z "$PHYS_START" ] ; then
	        RESERVED_START=$(( `sed -e "s/.*mem=\([0-9]*\)M .*/\1 * 1024 * 1024/" /proc/cmdline` ))
	        # Some platforms like DM365 setup reserved video capture and display buffers on the reserver memory area
	        # so we are careful to avoid overlaping these areas with cmem
	        VIDEO_DISPLAY_BUFFERS_SIZE=$(( `( grep -q y.cont2 /proc/cmdline && sed -e "s/.*y.cont2_bufsize=\([0-9]*\) .*/+ \1/" /proc/cmdline ) || echo 0` ))
	        VIDEO_CAPTURE_BUFFERS_SIZE=$(( `( grep -q re.cont /proc/cmdline && sed -e 's/.*e.cont_bufsize=\([0-9]*\) .*/+ \1/' /proc/cmdline ) || echo 0` ))
	        PHYS_START=`printf '0x%x' $(( @RAM_BASE@ + $RESERVED_START + $VIDEO_DISPLAY_BUFFERS_SIZE + $VIDEO_CAPTURE_BUFFERS_SIZE ))`
	    fi
	    PHYS_END=`printf '0x%x' $(($PHYS_START + @CMEM_SIZE@))`
	    PHYS_END_INT=`printf '%d' $(($PHYS_START + @CMEM_SIZE@))`
	    if [ $PHYS_END_INT -gt @RAM_END_INT@ ] ; then
		echo "WARNING: the cmem allocation ends beyond the end of RAM registered for this hardware"
		echo "End of cmem: $PHYS_END, End of ram: @RAM_END@ \n"
	    fi
	    rmmod cmemk 2>/dev/null || true
	    rm -f /dev/cmem
	    echo "  Loading cmem from $PHYS_START to $PHYS_END"
	    modprobe cmemk phys_start=$PHYS_START phys_end=$PHYS_END allowOverlap=1 useHeapIfPoolUnavailable=1 @CMEM_TCMSETTINGS@
	fi
	if [ -f /lib/modules/@KERNELVERSION@/kernel/drivers/dsp/dsplinkk.ko ] ; then
	    rmmod dsplinkk 2>/dev/null || true
	    modprobe dsplinkk
	fi
	if [ -f /lib/modules/@KERNELVERSION@/kernel/drivers/dsp/sdmak.ko ] ; then
	    rmmod sdmak 2>/dev/null || true
	    modprobe sdmak
	fi
	if [ -f /lib/modules/@KERNELVERSION@/kernel/drivers/dsp/lpm_omap3530.ko ] ; then
	    rmmod lpm_omap3530 2>/dev/null || true
	    modprobe lpm_omap3530
	fi
	if [ -f /lib/modules/@KERNELVERSION@/kernel/drivers/dsp/dm365mmap.ko ] ; then
	    rmmod dm365mmap 2>/dev/null || true
	    modprobe dm365mmap
	    # For some reason this driver doesn't triger udev/mdev to build the device
	    rm -f /dev/dm365mmap
	    mknod /dev/dm365mmap c `awk '$2  ~ /dm365mmap/ {print $1}' /proc/devices` 0
	fi
	if [ -f /lib/modules/@KERNELVERSION@/kernel/drivers/dsp/edmak.ko ] ; then
	    rmmod edmak 2>/dev/null || true
	    modprobe edmak
	fi
	if [ -f /lib/modules/@KERNELVERSION@/kernel/drivers/dsp/irqk.ko ] ; then
	    rmmod irqk 2>/dev/null || true
	    modprobe irqk
	fi
	
	;;

stop)
	echo "Unloading coprocessors modules"
	if lsmod | grep -q cmemk ; then
	    rmmod cmemk || true
	fi
	if lsmod | grep -q sdmak ; then
	    rmmod sdmak || true
	fi
	if lsmod | grep -q lpm_omap3530 ; then
	    rmmod lpm_omap3530 || true
	fi
	if lsmod | grep -q dsplinkk ; then
	    rmmod dsplinkk || true
	fi
	if lsmod | grep -q dm365mmap ; then
	    rmmod dm365mmap || true
	fi
	if lsmod | grep -q edmak ; then
	    rmmod edmak || true
	fi
	if lsmod | grep -q irqk ; then
	    rmmod irqk || true
	fi
	;;

*)
	echo "Usage: /etc/init.d/coprocessors {start|stop}"
	exit 1
	;;
esac
